
        IMPORTANT: FOR THIS TO WORK
        You must have compiled the ax25 C++ layer (go to `transceiver/ax25` and run `make`)
        You must run this with the same processing bits as you compiled ax25 with (32bit vs 64bit)
                I (Adam) use 32bit Python because my C++ compiler was being a bitch
          

--- TEST 0 ---
Preparing to send: 
    The quick brown fox jumped over the lazy dog
    (hex: 0x54 0x68 0x65 0x20 0x71 0x75 0x69 0x63 0x6b 0x20 0x62 0x72 0x6f 0x77 0x6e 0x20 0x66 0x6f 0x78 0x20 0x6a 0x75 0x6d 0x70 0x65 0x64 0x20 0x6f 0x76 0x65 0x72 0x20 0x74 0x68 0x65 0x20 0x6c 0x61 0x7a 0x79 0x20 0x64 0x6f 0x67)
msg type command, data type N/A
              
Encoding message...
Encoded message: 0x7e 0x39 0x49 0x61 0x51 0x2 0x2 0x3e 0xaa 0xb2 0xa6 0x88 0xb8 0xb2 0xc3 0x60 0x0 0x15 0xb 0x53 0x2 0x47 0x57 0x4b 0x63 0x6b 0x2 0x23 0x27 0x7b 0x77 0x3b 0x2 0x33 0x7b 0xf 0x2 0x2b 0x57 0x5b 0x7 0x53 0x13 0x2 0x7b 0x37 0x53 0x27 0x2 0x17 0xb 0x53 0x2 0x1b 0x43 0x2f 0x4f 0x2 0x13 0x7b 0x73 0x32 0x53 0x0 0x7e
Placing encoded message inside 1mio bytes of random noise...

Message found successfully!
    Decoded Payload: The quick brown fox jumped over the lazy dog
    Source:          USYDGS
    Destination:     NICE  
    Message Type:    1 (0=response, 1=command)
    Control Type:    2 (0=info I, 2=unnumbered U)
    Data Type:       0 (0=WOD, 1=Science. doesn't apply to command msg types)
    Send Sequence:   -1 (-1=unnumbered)
              
## TEST PASSED ##


--- TEST 1 ---
Preparing to send: 
    [83, 79, 83, 45, 83, 79, 83]
    (hex: 0x53 0x4f 0x53 0x2d 0x53 0x4f 0x53)
msg type command, data type N/A
              
Encoding message...
Encoded message: 0x7e 0x39 0x49 0x61 0x51 0x2 0x2 0x3e 0xaa 0xb2 0xa6 0x88 0xb8 0xb2 0xc3 0x60 0x0 0x65 0x79 0x65 0x5a 0x65 0x79 0x65 0x53 0xa4 0x80 0x7e
Placing encoded message inside 1mio bytes of random noise...

Message found successfully!
    Decoded Payload: 0x53 0x4f 0x53 0x2d 0x53 0x4f 0x53
    Source:          USYDGS
    Destination:     NICE  
    Message Type:    1 (0=response, 1=command)
    Control Type:    2 (0=info I, 2=unnumbered U)
    Data Type:       0 (0=WOD, 1=Science. doesn't apply to command msg types)
    Send Sequence:   -1 (-1=unnumbered)
              
## TEST PASSED ##


--- TEST 2 ---
Preparing to send: 
    [64, 63, 105, 73, 18, 174, 233]
    (hex: 0x40 0x3f 0x69 0x49 0x12 0xae 0xe9)
msg type response, data type Science
              
Encoding message...
Encoded message: 0x7e 0x55 0x65 0x4d 0x11 0x71 0x65 0x7d 0x1c 0xa4 0xb0 0xa8 0x81 0x1 0x43 0x80 0x0 0x1 0x7d 0x25 0xa4 0x92 0x1d 0x65 0xde 0x74 0x80 0x7e
Placing encoded message inside 1mio bytes of random noise...

Message found successfully!
    Decoded Payload: 0x40 0x3f 0x69 0x49 0x12 0xae 0xe9
    Source:          NICE  
    Destination:     USYDGS
    Message Type:    0 (0=response, 1=command)
    Control Type:    0 (0=info I, 2=unnumbered U)
    Data Type:       1 (0=WOD, 1=Science. doesn't apply to command msg types)
    Send Sequence:   0 (-1=unnumbered)
              
## TEST PASSED ##


--- TEST 3 ---
Preparing to send: 
    [61, 149, 33, 227, 15, 241, 84]
    (hex: 0x3d 0x95 0x21 0xe3 0xf 0xf1 0x54)
msg type response, data type WOD
              
Encoding message...
Encoded message: 0x7e 0x55 0x65 0x4d 0x11 0x71 0x65 0x3e 0x1c 0xa4 0xb0 0xa8 0x81 0x1 0x43 0xa0 0x0 0x5e 0x54 0xc2 0x63 0xec 0x23 0xca 0x84 0x4b 0xc0 0x7e
Placing encoded message inside 1mio bytes of random noise...

Message found successfully!
    Decoded Payload: 0x3d 0x95 0x21 0xe3 0xf 0xf1 0x54
    Source:          NICE  
    Destination:     USYDGS
    Message Type:    0 (0=response, 1=command)
    Control Type:    0 (0=info I, 2=unnumbered U)
    Data Type:       0 (0=WOD, 1=Science. doesn't apply to command msg types)
    Send Sequence:   1 (-1=unnumbered)
              
## TEST PASSED ##


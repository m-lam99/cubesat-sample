
        IMPORTANT: FOR THIS TO WORK
        You must have compiled the ax25 C++ layer (go to `transceiver/ax25` and run `make`)
        You must run this with the same processing bits as you compiled ax25 with (32bit vs 64bit)
                I (Adam) use 32bit Python because my C++ compiler was being a bitch
          

--- TEST 0 ---
Preparing to send: 
    The quick brown fox jumped over the lazy dog
    (hex: 0x54 0x68 0x65 0x20 0x71 0x75 0x69 0x63 0x6b 0x20 0x62 0x72 0x6f 0x77 0x6e 0x20 0x66 0x6f 0x78 0x20 0x6a 0x75 0x6d 0x70 0x65 0x64 0x20 0x6f 0x76 0x65 0x72 0x20 0x74 0x68 0x65 0x20 0x6c 0x61 0x7a 0x79 0x20 0x64 0x6f 0x67)
msg type command, data type N/A
              
Encoding message...
Encoded message: 0x7e0x390x490x610x510x20x20x3e0xaa0xb20xa60x880xb80xb20xc30x600x00x150xb0x530x20x470x570x4b0x630x6b0x20x230x270x7b0x770x3b0x20x330x7b0xf0x20x2b0x570x5b0x70x530x130x20x7b0x370x530x270x20x170xb0x530x20x1b0x430x2f0x4f0x20x130x7b0x730x320x530x00x7e
Placing encoded message inside 1mio bytes of random noise...

Message found successfully!
    Decoded Payload: The quick brown fox jumped over the lazy dog
    Source:          USYDGS
    Destination:     NICE  
    Message Type:    1 (0=response, 1=command)
    Control Type:    2 (0=info I, 2=unnumbered U)
    Data Type:       0 (0=WOD, 1=Science. doesn't apply to command msg types)
    Send Sequence:   -1 (-1=unnumbered)
              
## TEST PASSED ##


--- TEST 1 ---
Preparing to send: 
    [83, 79, 83, 45, 83, 79, 83]
    (hex: 0x53 0x4f 0x53 0x2d 0x53 0x4f 0x53)
msg type command, data type N/A
              
Encoding message...
Encoded message: 0x7e0x390x490x610x510x20x20x3e0xaa0xb20xa60x880xb80xb20xc30x600x00x650x790x650x5a0x650x790x650x530xa40x800x7e
Placing encoded message inside 1mio bytes of random noise...

Message found successfully!
    Decoded Payload: 0x53 0x4f 0x53 0x2d 0x53 0x4f 0x53
    Source:          USYDGS
    Destination:     NICE  
    Message Type:    1 (0=response, 1=command)
    Control Type:    2 (0=info I, 2=unnumbered U)
    Data Type:       0 (0=WOD, 1=Science. doesn't apply to command msg types)
    Send Sequence:   -1 (-1=unnumbered)
              
## TEST PASSED ##


--- TEST 2 ---
Preparing to send: 
    [64, 63, 105, 73, 18, 174, 233]
    (hex: 0x40 0x3f 0x69 0x49 0x12 0xae 0xe9)
msg type response, data type Science
              
Encoding message...
Encoded message: 0x7e0x550x650x4d0x110x710x650x7d0x1c0xa40xb00xa80x810x10x430x800x00x10x7d0x250xa40x920x1d0x650xde0x740x800x7e
Placing encoded message inside 1mio bytes of random noise...

Message found successfully!
    Decoded Payload: 0x40 0x3f 0x69 0x49 0x12 0xae 0xe9
    Source:          NICE  
    Destination:     USYDGS
    Message Type:    0 (0=response, 1=command)
    Control Type:    0 (0=info I, 2=unnumbered U)
    Data Type:       1 (0=WOD, 1=Science. doesn't apply to command msg types)
    Send Sequence:   0 (-1=unnumbered)
              
## TEST PASSED ##


--- TEST 3 ---
Preparing to send: 
    [61, 149, 33, 227, 15, 241, 84]
    (hex: 0x3d 0x95 0x21 0xe3 0xf 0xf1 0x54)
msg type response, data type WOD
              
Encoding message...
Encoded message: 0x7e0x550x650x4d0x110x710x650x3e0x1c0xa40xb00xa80x810x10x430xa00x00x5e0x540xc20x630xec0x230xca0x840x4b0xc00x7e
Placing encoded message inside 1mio bytes of random noise...

Message found successfully!
    Decoded Payload: 0x3d 0x95 0x21 0xe3 0xf 0xf1 0x54
    Source:          NICE  
    Destination:     USYDGS
    Message Type:    0 (0=response, 1=command)
    Control Type:    0 (0=info I, 2=unnumbered U)
    Data Type:       0 (0=WOD, 1=Science. doesn't apply to command msg types)
    Send Sequence:   1 (-1=unnumbered)
              
## TEST PASSED ##

